@limits <lower=1>
int Nobs  : 100
@limits <lower=0,upper=1>
int y[Nobs] : [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1]
@limits <lower=1>
int SubjIdx[Nobs] : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
int[2, 2] t : [[1,2],[3,4]]
@limits <lower=1>
int Nsubj : 10

@blk start transformedparam
@limits <lower=0>
float A
@limits <lower=0>
float B
A = kappa*omega
@blk end transformedparam
B = (1-kappa)*omega

@prior
@limits <lower=0>
float omega

@prior
@limits <lower=0,upper=1>
float kappa

@prior
@limits <lower=0,upper=1>
vector[Nsubj] theta

omega = gamma(2.0,3.0)
kappa = beta(7.0,3.0)
theta = beta(A,B)
for(obs in 1:Nobs)
{
    y[obs]= bernoulli(theta[SubjIdx[obs]])
}
posterior(omega)
posterior(kappa)
posterior(theta)